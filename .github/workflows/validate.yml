name: Validate

on:
  push:
    branches: ["main"]
    paths:
      - "Cargo.toml"
      - "Cargo.lock"
      - "src/**"
      - "parser/**"
      - "site/**"
      - "pad/**"
      - "tests*/**"
      - "changelog.md"
      - "readme.md"
      - ".github/workflows/validate.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "Cargo.toml"
      - "Cargo.lock"
      - "src/**"
      - "parser/**"
      - "site/**"
      - "pad/**"
      - "tests*/**"
      - "changelog.md"
      - "readme.md"
      - ".github/workflows/validate.yml"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check formatting
      run: cargo fmt --all --check
  install_deps:
    needs: check_formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install depsAdd commentMore actions
      run: |
        sudo apt-get update -y
        sudo apt-get --fix-missing install -y
        sudo apt-get install libasound2-dev libudev-dev pkg-config libx11-dev libjpeg-dev
    - name: Install WASM target
      run: rustup target add wasm32-unknown-unknown
  # Test the interpreter
  test_bin:
    needs: install_deps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: target
        key: build-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          build-${{ runner.os }}-
    - name: Check interpreter clippy lints
      run: cargo clippy --no-deps
    - name: Run interpreter tests
      run: cargo test --lib
  # Test the site
  test_site:
    needs: install_deps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: target
        key: build-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          build-${{ runner.os }}-
    - name: Run site tests
      run: cargo test -p site
  # Test ffi
  test_ffi:
    needs: install_deps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: target
        key: build-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          build-${{ runner.os }}-
    - name: Run site tests
      run: cargo test -p tests_ffi
  # check_features:
  #   needs: test_bin
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Check feature combinations
  #     run: cargo run ./.github/features.ua
